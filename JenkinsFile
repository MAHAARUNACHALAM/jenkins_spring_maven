pipeline {
    agent {label 'agent_maha_cicd'}
    
    stages {
        stage('Build and Test') {
            steps {
                //mvn clean package say version 17 not supported
                sh "mvn clean package"
            }
        }
        stage('Create Git Tag') {
            steps {
                script {
                    def buildTag = "build-${BUILD_NUMBER}"
                    sh "echo Creating tag ${buildTag}"
                    
                    withCredentials([gitUsernamePassword(credentialsId: 'git-credentials', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh "git config --global user.email 'smahaarunachalam@gmail.com'"
                        sh "git config --global user.name 'mahaarunachalam'"
                        
                    sh "git tag ${buildTag}"
                    sh "git push --tags"
                   }
                }
            }
        }
        stage('Build and Push Docker Image') {
            steps {
                sh "sudo docker login -u mahaarunachalam -p dckr_pat_Kiveg21MryV2aptjdom8IvsQTJA"
                sh "sudo docker build -t jenkinsmaven ."
                sh "sudo docker tag jenkinsmaven:latest my-registry/jenkinsmaven:build-${BUILD_NUMBER}"
                sh "sudo docker push mahaarunachalam/jenkinsmaven:build-${BUILD_NUMBER}"
                //stop and remove the container if already running with previous build number tag

                // sh "docker stop $(docker ps -a -q --filter ancestor=mahaarunachalam/jenkinsmaven:build-${BUILD_NUMBER-1} --format="{{.ID}}")"
                // sh "docker rm $(docker ps -a -q --filter ancestor=mahaarunachalam/jenkinsmaven:build-${BUILD_NUMBER-1} --format="{{.ID}}")"
                sh "sudo docker run -p 8080:8080 -d mahaarunachalam/jenkinsmaven:build-${BUILD_NUMBER}"
            }
        }

    }
}
